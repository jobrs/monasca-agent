init_config:

instances:
    -   name: InfluxDB
        url: http://localhost:8086/query?
        timeout: 1

         # If your service uses basic authentication, you can optionally
         # specify a username and password that will be used in the check.
#        username: user
#        password: pass

         # The (optional) collect_response_time parameter will instruct the
         # check to create a metric 'network.http.response_time', tagged with
         # the url, reporting the response time in seconds.

        collect_response_time: true

         # The (optional) disable_ssl_validation will instruct the check
         # to skip the validation of the SSL certificate of the URL being tested.
         # This is mostly useful when checking SSL connections signed with
         # certificates that are not themselves signed by a public authority.
         # When true, the check logs a warning in collector.log

#        disable_ssl_validation: true

         # The (optional) headers parameter allows you to send extra headers
         # with the request. This is useful for explicitly specifying the host
         # header or perhaps adding headers for authorization purposes. Note
         # that the http client library converts all headers to lowercase.
         # This is legal according to RFC2616
         # (See: http://tools.ietf.org/html/rfc2616#section-4.2)
         # but may be problematic with some HTTP servers
         # (See: https://code.google.com/p/httplib2/issues/detail?id=169)

#        headers:
#          Host: alternative.host.example.com
#          X-Auth-Token: SOME-AUTH-TOKEN

#       HTTP parameters k/v pairs.  Generally used to supply URL parameters
#       to query InfluxDB
#       params:
#          q : SHOW STATS

#        Params will be urlencoded
        urlencode: !!bool true

        dimensions: !!map
          service : monitoring
          component : influxdb

#       A list of metrics that will be published.  The names here should be the
#       same as they appear in the series.name.server payload returned from
#       the InfluxDB json payload http://localhost:8086/query?q=SHOW%20STATS
#       NOTE: http_status is a special internal metric that does not come from
#       InfluxDB.
#       NOTE: response_time is a special internal metric that does not come from
#       InfluxDB. collect_response_time must be true in order for this metric to
#       be published.
#       If you have multiple agents querying the same instance you
#       can load balance amongst them to reduce the number of metrics Monasca
#       will ingest.
        whitelist: !!seq
        - queriesRx
        - queriesExecuted
        - http_status
        - response_time

#       This maps the metric received from InfluxDB (1st column) to the metric name
#       on the right and assigns a metric type to it.  If there is base metric that
#       is received and it's in the whitelist, and not in the metricmap the metric
#       will retain the name it originally had and be published with that name and
#       get assigned a default type of 'gauge'.  If it's not in the whitelist then
#       it will be ignored.
#       This mapping allows the user to make statuses unique so generic alarms will
#       not trigger on a unique metric.  Conversely the same applies to generic alarms
#       and metric names.
        metricmap: !!map
          response_time        : [ influxdb.response_time, gauge ]
          http_status          : [ influxdb.http_status, gauge ]
          broadcastMessageTx   : [ influxdb.broadcast_msg_tx, rate ]
          writeSeriesMessageTx : [ influxdb.write_series_msg_tx, rate ]
          queriesExecuted      : [ influxdb.queries_executed, rate ]
          queriesRx            : [ influxdb.queries_rx, rate ]
          shardsCreated        : [ influxdb.shards_created, rate ]
          broadcastMessageRx   : [ influxdb.broadcast_msg_rx, rate ]
          batchWriteRx         : [ influxdb.batch_write_rx, rate ]
          pointWriteRx         : [ influxdb.point_write_rx, rate ]
